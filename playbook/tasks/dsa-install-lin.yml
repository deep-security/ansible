# Copyright 2018, Trend Micro
#
# License as per [repo](master/LICENSE)
#
# *********************************************************************
# * Install the Deep Security Agent (For Linux only)
# *********************************************************************
---
# *********************************************************************
# * Detect the platform architecture and package manager
# *********************************************************************
- name: Setting facts (apt) 
  set_fact:
    agent_local_path: /tmp/ds_agent.deb
  when: ansible_pkg_mgr == "apt"

- name: Setting facts (yum, zypper) 
  set_fact:
    agent_local_path: /tmp/ds_agent.rpm
  when: >
        ansible_pkg_mgr == "yum" or
        ansible_pkg_mgr == "zypper"

- name: Setting facts (svr4pkg) 
  set_fact:
    agent_local_path: /tmp/ds_agent.pkg.gz
  when: ansible_pkg_mgr == "svr4pkg"

- name: Setting facts (pkg5) 
  set_fact:
    agent_local_path: /tmp/ds_agent.p5p.gz
  when: ansible_pkg_mgr == "pkg5"

- name: Setting facts (Amazon) 
  set_fact:
    agent_relative_path: software/agent/amzn1/{{ ansible_architecture }}
  when: ansible_distribution == "Amazon"

- name: Setting facts (CentOS, RHEL) 
  set_fact:
    agent_relative_path: software/agent/RedHat_EL{{ ansible_distribution_major_version }}/{{ ansible_architecture }}
  when: >
        ansible_distribution == "CentOS" or
        ansible_distribution == "RedHat"

- name: Setting facts (Debian) 
  set_fact:
    agent_relative_path: software/agent/Debian_{{ ansible_distribution_major_version }}/{{ ansible_architecture }}
  when: ansible_distribution == "Debian"

- name: Setting facts (Ubuntu) 
  set_fact:
    agent_relative_path: software/agent/Ubuntu_{{ ansible_distribution_major_version }}.04/{{ ansible_architecture }}
  when: ansible_distribution == "Ubuntu"

- name: Setting facts (SuSE) 
  set_fact:
    agent_relative_path: software/agent/SuSE_{{ ansible_distribution_major_version }}/{{ ansible_architecture }}
  when: ansible_distribution == "SLES"

- name: Setting facts (CloudLinux)
  set_fact:
    agent_relative_path: software/agent/CloudLinux_{{ ansible_distribution_major_version }}/{{ ansible_architecture }}
  when: ansible_distribution == "CloudLinux"

- name: Setting facts (OracleLinux)
  set_fact:
    agent_relative_path: software/agent/Oracle_OL{{ ansible_distribution_major_version }}/{{ ansible_architecture }}
  when: ansible_distribution == "OracleLinux"

- debug: 
    msg: 
      - "agent_local_path: {{ agent_local_path }}"
      - "agent_relative_path: {{ agent_relative_path }}"

# *********************************************************************
# * Download Deep Security agent from Deep Security manager
# *********************************************************************
- name: Download the Deep Security agent
  get_url: 
    url: "https://{{ dsm_agent_download_hostname }}:{{ dsm_agent_download_port }}/{{ agent_relative_path }}/" 
    dest: "{{ agent_local_path }}"
    validate_certs: no
    timeout: 300
    force: yes

- stat:
    path: "{{ agent_local_path }}"
  register: agent_file

- name: Check file size
  debug:
    msg: "Downloaded DSA installer file size : {{ agent_file.stat.size }} bytes"

- fail:
    msg:
      - "Downloaded file size is not valid. There are two possiblities : 1. The OS platform is not supported. 2. Deep Security Manager don't provide agent software package installer for your OS platform."
      - "Please verify that agent software package for your platform is available using this reference article https://help.deepsecurity.trendmicro.com/10/0/Get-Started/Install/import-agent-software.html?redirected=true&Highlight=download"
  when: agent_file.stat.size == 0

# *********************************************************************
# * Install the agent
# *********************************************************************
# Both RPM and DPKG managers will do upgrade if downloaded package version is newer than installed. 
# If versions are equals, no action. If older than installed, some managers will throw error.
- name: Install the Deep Security agent (yum)
  yum: 
    name: "{{ agent_local_path }}"
    state: present
  when: ansible_pkg_mgr == "yum"
  become: true

- name: Install the Deep Security agent (apt)
  apt: 
    deb: "{{ agent_local_path }}"
    state: present
  when: ansible_pkg_mgr == "apt"
  become: true

- name: Install the Deep Security agent (zypper)
  zypper: 
    name: "{{ agent_local_path }}"
    state: present
    disable_gpg_check: yes
  when: ansible_pkg_mgr == "zypper"
  become: true

- name: Make sure the agent has gathered the required metadata
  pause: 
    seconds: 5

# *********************************************************************
# * Make sure the service is running
# *********************************************************************
- name: Get service 'ds_agent' status 
  shell: "service ds_agent status"
  register: result
  become: true

- name: Check service is on
  fail:
    msg: "Failed to start agent service"
  when: (result.stdout | regex_search('(running)')) != "running"

- debug:
    msg: "ds_agent package installed successfully"